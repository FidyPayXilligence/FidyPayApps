package com.fidypay.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.springframework.data.jpa.domain.support.AuditingEntityListener;

// Generated Apr 18, 2015 4:15:37 PM by Hibernate Tools 4.0.0

/**
 * CustomerTransactions generated by hbm2java
 */

@Entity
//@Table(name = "CUSTOMER_TRANSACTIONS")
@EntityListeners(AuditingEntityListener.class)
@Table(name = "CUSTOMER_TRANSACTIONS", indexes = {
		@Index(name = "index_CUST_TRXN_ID", columnList = "CUST_TRXN_ID"),
		@Index(name = "index_CUSTOMER_ID", columnList = "CUSTOMER_ID"),
		@Index(name = "index_TRANSACTION_ID", columnList = "TRANSACTION_ID")
		})
public class CustomerTransactions implements java.io.Serializable {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "CUST_TRXN_ID")
    private long custTrxnId;
	
	@ManyToOne
	@JoinColumn(name = "CUSTOMER_ID")
    private Customers customers;
	
	
	 @ManyToOne
	 @JoinColumn(name = "TRANSACTION_ID")
     private CoreTransactions coreTransactions;

	public CustomerTransactions() {
	}
 
	public CustomerTransactions(long custTrxnId, Customers customers,
			CoreTransactions coreTransactions) {
		this.custTrxnId = custTrxnId;
		this.customers = customers;
		this.coreTransactions = coreTransactions;
	}

	public long getCustTrxnId() {
		return this.custTrxnId;
	}

	public void setCustTrxnId(long custTrxnId) {
		this.custTrxnId = custTrxnId;
	}

	public Customers getCustomers() {
		return this.customers;
	}

	public void setCustomers(Customers customers) {
		this.customers = customers;
	}

	public CoreTransactions getCoreTransactions() {
		return this.coreTransactions;
	}

	public void setCoreTransactions(CoreTransactions coreTransactions) {
		this.coreTransactions = coreTransactions;
	}

}
